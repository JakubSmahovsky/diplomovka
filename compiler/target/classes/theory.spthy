theory spthy
begin

builtins: symmetric-encryption

rule init:
[
  Fr(~Kab),
  Fr(~secret),
  Fr(~runid)
]--[
  Principals(~runid, $Bob, $Alice)
]->[
  !Bob_init(~runid, $Bob, ~Kab),
  !PrincipalPrivate($Bob, ~Kab),
  !Alice_init(~runid, $Alice, ~Kab, ~secret),
  !PrincipalPrivate($Alice, ~Kab),
  !PrincipalPrivate($Alice, ~secret)
]

rule Bob_2_0:
[
  !Bob_init(runid, $Bob, Kab),
  In(Na),
  In(senc(<Na, secret>, Kab))
]--[
  Bob_2_0(runid, $Bob, Kab, Na, senc(<Na, secret>, Kab), <Na, secret>)
]->[
  Bob_2_0(runid, $Bob, Kab, Na, senc(<Na, secret>, Kab), <Na, secret>)
]

rule Alice_1_2:
let
  message = senc(<Na, secret>, Kab)
in
[
  !Alice_init(runid, $Alice, Kab, secret),
  Fr(~Na)
]--[
  Alice_1_2(runid, $Alice, Kab, secret, ~Na, message)
]->[
  Out(~Na),
  Out(message),
  Alice_1_2(runid, $Alice, Kab, secret, ~Na, message)
]

rule privateReveal: [
  !PrincipalPrivate(Principal, Private)
]--[
  Dishonest(Principal)
]->[
  Out(Private)
]

end
