theory spthy
begin

builtins: symmetric-encryption

rule init:
[
  Fr(~runid),
  Fr(~Kas),
  Fr(~Kbs)
]--[
  Principals(~runid, $Alice, $Bob, $Server)
]->[
  !Alice_init(~runid, $Alice, ~Kas),
  !PrincipalPrivate($Alice, ~Kas),
  !Bob_init(~runid, $Bob, ~Kbs),
  !PrincipalPrivate($Bob, ~Kbs),
  !Server_init(~runid, $Server, ~Kas, ~Kbs),
  !PrincipalPrivate($Server, ~Kas),
  !PrincipalPrivate($Server, ~Kbs)
]

rule Alice_0_0:
let
  m1 = senc(<~Na, ~M, $Alice, $Bob>, Kas)
in
[
  !Alice_init(runid, $Alice, Kas),
  Fr(~Na),
  Fr(~M)
]--[
  Alice_0_0(runid, $Alice, Kas, ~Na, ~M, m1)
]->[
  Out(~M),
  Out($Alice),
  Out($Bob),
  Out(m1),
  Alice_0_0(runid, $Alice, Kas, ~Na, ~M, m1)
]

rule Alice_2_3:
[
  Alice_0_0(runid, $Alice, Kas, Na, M, m1),
  In(senc(<Na, Kab>, Kas))
]--[
  Alice_2_3(runid, $Alice, Kas, senc(<Na, Kab>, Kas), Kab)
]->[
  Alice_2_3(runid, $Alice, Kas, senc(<Na, Kab>, Kas), Kab)
]

rule Bob_0_1:
let
  m2 = senc(<~Nb, M, $Alice, $Bob>, Kbs)
in
[
  !Bob_init(runid, $Bob, Kbs),
  In(M),
  In($Alice),
  In($Bob),
  In(m1),
  Fr(~Nb)
]--[
  Bob_0_1(runid, $Bob, Kbs, M, $Alice, $Bob, m1, ~Nb, m2)
]->[
  Out(M),
  Out($Alice),
  Out($Bob),
  Out(m1),
  Out(m2),
  Bob_0_1(runid, $Bob, Kbs, M, $Alice, $Bob, m1, ~Nb, m2)
]

rule Bob_2_4:
[
  Bob_0_1(runid, $Bob, Kbs, M, $Alice, $Bob, m1, Nb, m2),
  In(M),
  In(senc(<Nb, Kab>, Kbs)),
  In(m4)
]--[
  Bob_2_4(runid, $Bob, Kbs, M, $Alice, $Bob, m1, senc(<Nb, Kab>, Kbs), m4, Kab)
]->[
  Out(m4),
  Bob_2_4(runid, $Bob, Kbs, M, $Alice, $Bob, m1, senc(<Nb, Kab>, Kbs), m4, Kab)
]

rule Server_1_2:
let
  m3 = senc(<Nb, ~Kab>, Kbs)
  m4 = senc(<Na, ~Kab>, Kas)
in
[
  !Server_init(runid, $Server, Kas, Kbs),
  In(M),
  In($Alice),
  In($Bob),
  In(senc(<Na, M, $Alice, $Bob>, Kas)),
  In(senc(<Nb, M, $Alice, $Bob>, Kbs)),
  Fr(~Kab)
]--[
  Server_1_2(runid, $Server, Kas, Kbs, M, $Alice, $Bob, senc(<Na, M, $Alice, $Bob>, Kas), senc(<Nb, M, $Alice, $Bob>, Kbs), Na, Nb, ~Kab, m3, m4)
]->[
  Out(M),
  Out(m3),
  Out(m4),
  Server_1_2(runid, $Server, Kas, Kbs, M, $Alice, $Bob, senc(<Na, M, $Alice, $Bob>, Kas), senc(<Nb, M, $Alice, $Bob>, Kbs), Na, Nb, ~Kab, m3, m4)
]

rule privateReveal: [
  !PrincipalPrivate(Principal, Private)
]--[
  Dishonest(Principal)
]->[
  Out(Private)
]

lemma secrecy0:
all-traces "
All runid Alice Bob Server Kas m4 Kab #t0 #t1.
Principals(runid, Alice, Bob, Server) @ #t0 &
not (Ex #t2.Dishonest(Alice) @ #t2) &
not (Ex #t3.Dishonest(Bob) @ #t3) &
not (Ex #t4.Dishonest(Server) @ #t4) &
Alice_2_3(runid, Alice, Kas, m4, Kab) @ #t1
==>
not (Ex #t5.K(Kab) @ #t5)
"

end
