theory spthy
begin

builtins: symmetric-encryption

rule init:
[
  Fr(~Kas),
  Fr(~Kbs),
  Fr(~instanceid)
]--[
  Principals(~instanceid, $Alice, $Bob, $Server)
]->[
  !Alice_init($Alice, $Bob, ~instanceid, ~Kas),
  !PrincipalPrivate($Alice, ~instanceid),
  !PrincipalPrivate($Alice, ~Kas),
  !Bob_init($Bob, ~instanceid, ~Kbs),
  !PrincipalPrivate($Bob, ~instanceid),
  !PrincipalPrivate($Bob, ~Kbs),
  !Server_init($Server, ~instanceid, ~Kas, ~Kbs),
  !PrincipalPrivate($Server, ~instanceid),
  !PrincipalPrivate($Server, ~Kas),
  !PrincipalPrivate($Server, ~Kbs)
]

rule Alice_0_0:
let
  m1 = senc(<~Na, ~M, Alice, Bob>, Kas)
in
[
  !Alice_init(Alice, Bob, instanceid, Kas),
  Fr(~M),
  Fr(~Na)
]--[
  Alice_0_0(Alice, Bob, instanceid, Kas, ~M, ~Na, m1)
]->[
  Out(~M),
  Out(Alice),
  Out(Bob),
  Out(m1),
  Alice_0_0(Alice, Bob, instanceid, Kas, ~M, ~Na, m1)
]

rule Alice_2_3:
[
  Alice_0_0(Alice, Bob, instanceid, Kas, M, Na, m1),
  In(senc(<Na, Kab>, Kas))
]--[
  Alice_2_3(Alice, Bob, instanceid, Kas, senc(<Na, Kab>, Kas), Kab)
]->[
  Alice_2_3(Alice, Bob, instanceid, Kas, senc(<Na, Kab>, Kas), Kab)
]

rule Bob_0_1:
let
  m2 = senc(<~Nb, M, Alice, Bob>, Kbs)
in
[
  !Bob_init(Bob, instanceid, Kbs),
  In(M),
  In(Alice),
  In(Bob),
  In(m1),
  Fr(~Nb)
]--[
  Bob_0_1(Bob, instanceid, Kbs, M, Alice, Bob, m1, ~Nb, m2)
]->[
  Out(M),
  Out(Alice),
  Out(Bob),
  Out(m1),
  Out(m2),
  Bob_0_1(Bob, instanceid, Kbs, M, Alice, Bob, m1, ~Nb, m2)
]

rule Bob_2_4:
[
  Bob_0_1(Bob, instanceid, Kbs, M, Alice, Bob, m1, Nb, m2),
  In(M),
  In(senc(<Nb, Kab>, Kbs)),
  In(m4)
]--[
  Bob_2_4(Bob, instanceid, Kbs, M, Alice, Bob, m1, senc(<Nb, Kab>, Kbs), m4, Kab)
]->[
  Out(m4),
  Bob_2_4(Bob, instanceid, Kbs, M, Alice, Bob, m1, senc(<Nb, Kab>, Kbs), m4, Kab)
]

rule Server_1_2:
let
  m3 = senc(<Nb, ~Kab>, Kbs)
  m4 = senc(<Na, ~Kab>, Kas)
in
[
  !Server_init(Server, instanceid, Kas, Kbs),
  In(M),
  In(Alice),
  In(Bob),
  In(senc(<Na, M, Alice, Bob>, Kas)),
  In(senc(<Nb, M, Alice, Bob>, Kbs)),
  Fr(~Kab)
]--[
  Server_1_2(Server, instanceid, Kas, Kbs, M, Alice, Bob, senc(<Na, M, Alice, Bob>, Kas), senc(<Nb, M, Alice, Bob>, Kbs), Na, Nb, ~Kab, m3, m4)
]->[
  Out(M),
  Out(m3),
  Out(m4),
  Server_1_2(Server, instanceid, Kas, Kbs, M, Alice, Bob, senc(<Na, M, Alice, Bob>, Kas), senc(<Nb, M, Alice, Bob>, Kbs), Na, Nb, ~Kab, m3, m4)
]

rule privateReveal: [
  !PrincipalPrivate(Principal, Private)
]--[
  Dishonest(Principal)
]->[
  Out(Private)
]

lemma secrecy0:
all-traces "
All instanceid Alice Bob Server Kas m4 Kab #t0 #t1 #t2.
Principals(instanceid, Alice, Bob, Server) @ #t0 &
Alice_2_3(Alice, Bob, instanceid, Kas, m4, Kab) @ #t1 &
K(Kab) @ #t2
==>
(Ex #t3.Dishonest(Alice) @ #t3) |
(Ex #t4.Dishonest(Bob) @ #t4) |
(Ex #t5.Dishonest(Server) @ #t5)
"

end
