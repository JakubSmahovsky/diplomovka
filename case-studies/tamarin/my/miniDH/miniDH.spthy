theory spthy
begin

builtins: symmetric-encryption, diffie-hellman

rule init:
let
  k = 'g'^~b^~a
in
[
  Fr(~a),
  Fr(~b),
  Fr(~p)
]-->[
  !Alice_init($Alice, ~p, k),
  !Bob_init($Bob, k)
]

rule Alice:
let
  m = senc(p, k)
in
[
  !Alice_init(Alice, p, k)
]-->[
  Out(m),
  Alice(Alice, p, k, m)
]

rule Bob:
[
  !Bob_init(Bob, k),
  In(senc(p, k))
]--[
  Bob(Bob, k, senc(p, k), p)
]->[
  Bob(Bob, k, senc(p, k), p)
]

lemma secrecy:
all-traces "
  All Bob k m p #t0.
  Bob(Bob, k, m, p) @ #t0
  ==>
  not (Ex #t1.K(p) @ #t1)
"

end