// Andres Secure RPC protocol
// The attack requires compromising Kab2 after the protocol finishes
// which our implementation doesn't yet support.

// Another attack is valid in our model, the adversary replays
// ENC(Kab, {Nb, '1'}) instead of ENC(Kab, {Kab2, Nb2})
// The adversary doesn't learn Nb, so confidentiality holds, but authentication doesn't.

principals: Alice, Bob
unary-equals: implicit

Bob [
  knows private Kab
  knows public Alice
]

Alice [
  knows private Kab
  generates Na
  m1 = ENC(Kab, Na)
]
Alice -> Bob: Alice, m1

Bob [
  Na = DEC(Kab, m1)
  generates Nb
  m2 = ENC(Kab, {{Na, '1'}, Nb})
]
Bob -> Alice: m2

Alice [
  {{Na, '1'}, Nb} = DEC(Kab, m2)
  m3 = ENC(Kab, {Nb, '1'})
]
Alice -> Bob: m3

Bob [
  {Nb, '1'} = DEC(Kab, m3)
  generates Kab2, Nb2
  m4 = ENC(Kab, {Kab2, Nb2})
]
Bob -> Alice: m4

Alice [
  {Kab2, Nb2} = DEC(Kab, m4)
]

queries [
  authentication? Bob -> Alice: m4

  // warning: proof of this query produces a VERY long result
  // confidentiality? Alice's Kab2
]
