principals: Alice, Bob, Server
unary-equals: implicit

Alice [
  knows private Kas
  knows public Bob
  generates M, Na
  m1 = ENC(Kas, {Na, M, Alice, Bob})
]
Alice -> Bob: M, Alice, Bob, m1

Bob [
  knows private Kbs
  generates Nb
  m2 = ENC(Kbs, {Nb, M, Alice, Bob})
]
Bob -> Server: M, Alice, Bob, m1, m2

Server [
  knows private Kas, Kbs
  {Na, M, Alice, Bob} = DEC(Kas, m1)
  {Nb, M, Alice, Bob} = DEC(Kbs, m2)
  
  generates Kab
  m3 = ENC(Kbs, {Nb, Kab})
  m4 = ENC(Kas, {Na, Kab})
]
Server -> Bob: M, m3, m4

Bob [
  {Nb, Kab} = DEC(Kbs, m3)
]
Bob -> Alice: m4

Alice [
  {Na, Kab} = DEC(Kas, m4)
]

queries [
  confidentiality? Alice's Kab
  authentication? Bob->Alice: m4
  injective-authentication? Bob->Server: m2
]